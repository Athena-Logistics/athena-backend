on:
  push:
    branches:
      - "main"

name: "Main Branch"

# Secrets:
# * CACHE_VERSION - Set to `date +%s`, set new when the cache should be busted
# * FLY_API_TOKEN - API Token for Deployment

jobs:
  detectToolVersions:
    name: "Detect Tool Versions"

    uses: maennchen/athena/.github/workflows/part_tool_versioning.yml@main

  test:
    name: "Test"

    needs: ['detectToolVersions']

    uses: maennchen/athena/.github/workflows/part_test.yml@main
    with:
      elixirVersion: "${{ needs.detectToolVersions.outputs.elixirVersion }}"
      otpVersion: "${{ needs.detectToolVersions.outputs.otpVersion }}"
    secrets:
      CACHE_VERSION: "${{ secrets.CACHE_VERSION }}"

  build:
    name: "Build"

    needs: ['detectToolVersions']

    uses: maennchen/athena/.github/workflows/part_build.yml@main
    with:
      elixirVersion: "${{ needs.detectToolVersions.outputs.elixirVersion }}"
      otpVersion: "${{ needs.detectToolVersions.outputs.otpVersion }}"
      nodeVersion: "${{ needs.detectToolVersions.outputs.nodeVersion }}"
      dockerTag: "${{ github.ref_name }}"
    secrets:
      CACHE_VERSION: "${{ secrets.CACHE_VERSION }}"

  deploy:
    name: "Deploy"

    needs: ['build']

    uses: maennchen/athena/.github/workflows/part_deploy.yml@main
    secrets:
      FLY_API_TOKEN: "${{ secrets.FLY_API_TOKEN }}"