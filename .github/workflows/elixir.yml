on: push

jobs:
  deps:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.10.1
      - uses: actions/cache@v1
        id: cache
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-${{ github.ref }}-
            deps-${{ runner.os }}-
            deps-
      - run: mix deps.get
      - uses: actions/upload-artifact@master
        with:
          name: deps
          path: deps
  
  compile_dev:
    runs-on: ubuntu-latest

    needs: ['deps']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.10.1
      - uses: actions/download-artifact@master
        with:
          name: deps
          path: deps
      - uses: actions/cache@v1
        id: cache
        with:
          path: _build/dev
          key: compile_dev-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            compile_dev-${{ runner.os }}-
            compile_dev-
      - run: mix compile
        env:
          MIX_ENV: dev
      - uses: actions/upload-artifact@master
        with:
          name: compile_dev
          path: _build/dev
  
  compile_test:
    runs-on: ubuntu-latest

    needs: ['deps']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.10.1
      - uses: actions/download-artifact@master
        with:
          name: deps
          path: deps
      - uses: actions/cache@v1
        id: cache
        with:
          path: _build/test
          key: compile_test-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            compile_test-${{ runner.os }}-
            compile_test-
      - run: mix compile
        env:
          MIX_ENV: test
      - uses: actions/upload-artifact@master
        with:
          name: compile_test
          path: _build/test
  
  compile_prod:
    runs-on: ubuntu-latest

    needs: ['deps']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.10.1
      - uses: actions/download-artifact@master
        with:
          name: deps
          path: deps
      - uses: actions/cache@v1
        id: cache
        with:
          path: _build/prod
          key: compile_prod-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            compile_prod-${{ runner.os }}-
            compile_prod-
      - run: mix compile
        env:
          MIX_ENV: prod
      - uses: actions/upload-artifact@master
        with:
          name: compile_prod
          path: _build/prod

  format:
    runs-on: ubuntu-latest

    needs: ['deps']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.10.1
      - uses: actions/download-artifact@master
        with:
          name: deps
          path: deps
      - run: mix format --check-formatted

  test:
    runs-on: ubuntu-latest

    needs: ['deps', 'compile_test']

    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.10.1
      - uses: actions/download-artifact@master
        with:
          name: deps
          path: deps
      - uses: actions/download-artifact@master
        with:
          name: compile_test
          path: _build/test
      - run: mix test
        env:
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres